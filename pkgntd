#!/bin/bash

ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
COL_BLUE=$ESC_SEQ"34;01m"
COL_MAGENTA=$ESC_SEQ"35;01m"
COL_CYAN=$ESC_SEQ"36;01m"

set -e
set -x

USAGE="$0 /path/to/drupal version"

# Versions must not start with a letter, v1.0.0 bad 1.0.0.RC01 ok

DRUPAL_ROOT=$1
VERSION=$2
TLD=$4

if [ -z "$DRUPAL_ROOT" ]; then
    echo $USAGE
    echo You must specify the path to the drupal root folder
    exit 1
fi

if [ -z "$VERSION" ]; then
    echo $USAGE
    echo You must specify a version number
    exit 1
fi

if [ -z "$TLD" ]; then
    TLD='co.uk'
fi

PACKAGE_NAME=`basename $DRUPAL_ROOT`

if [ ! -d "$DRUPAL_ROOT/sites/default/sql" ]; then
    chmod 755 ${DRUPAL_ROOT}/sites/default
    mkdir -p ${DRUPAL_ROOT}/sites/default/sql
    chmod 555 ${DRUPAL_ROOT}/sites/default
    APACHE_VERSION=`apache2ctl -v|head -n 1|cut -c 24-26`
    if [ "$APACHE_VERSION" == "2.4" ]; then
        cat >${DRUPAL_ROOT}/sites/default/sql/.htaccess<<EOF
Require all denied
EOF
    elif [ "$APACHE_VERSION" == "2.2" ]; then
        cat >${DRUPAL_ROOT}/sites/default/sql/.htaccess<<EOF
Order deny,allow
Deny from all
EOF
    else
        echo -e "${COL_RED}Unable to determine apache version.  I can create a .htaccess file in"
        echo -e "${DRUPAL_ROOT}/sites/default/sql/.htaccess.  You will need to create this yourself"
        echo -e "and re-run this script.${COL_RESET}"
    fi

fi

drush -r $DRUPAL_ROOT sql-dump --ordered-dump --result-file=sites/default/sql/site.sql  --structure-tables-key=common

mkdir -p $PACKAGE_NAME/$PACKAGE_NAME-$VERSION
# cp -r $DRUPAL_ROOT $PACKAGE_NAME/$PACKAGE_NAME-$VERSION
# tar & gzip the site.  the packager can't handle .info files
CWD=`pwd`
cd $DRUPAL_ROOT
tar -zcf ${CWD}/${PACKAGE_NAME}/${PACKAGE_NAME}-${VERSION}/${PACKAGE_NAME}.tgz * .htaccess
cd -

cd $PACKAGE_NAME/$PACKAGE_NAME-$VERSION
dh_make -c GPL -e ${PACKAGE_NAME}${VERSION}@neontribe.co.uk -n -s -i -y 

rm debian/*.{ex,EX}

# Add php dependancies that chef missed
sed -i -e '/^Depends:/ s/$/ apache2, libapache2-mod-php5, mysql-client, mysql-server, php-apc, php5-gd, php5-curl, php5-mysql, php5-imagick, php5-memcache, php5-memcached, ruby-compass /' debian/control

cat >debian/install<<EOF
${PACKAGE_NAME}.tgz /var/tmp/${PACKAGE_NAME}-${VERSION}
EOF

user=`echo ${PACKAGE_NAME} | cut -c 1-4`
user=$user`echo ${VERSION}| sed -e "s/\./_/g"`

VHOST=../../etc/apache/vhost.conf
VHOSTSSL=../../etc/apache/vhost-ssl.conf

mkdir -p debian/countryhideaways/var/tmp/
cp $VHOST debian/countryhideaways/var/tmp/${PACKAGE_NAME}-${VERSION}.conf
cp $VHOSTSSL debian/countryhideaways/var/tmp/${PACKAGE_NAME}-${VERSION}-ssl.conf

cat >debian/postinst<<EOF
#!/bin/bash

case "\$1" in
    configure)
        mkdir /var/www/${PACKAGE_NAME}-${VERSION}
        tar -C /var/www/${PACKAGE_NAME}-${VERSION} -zxf /var/tmp/${PACKAGE_NAME}-${VERSION}/${PACKAGE_NAME}.tgz
        # get root password
        echo "Enter the root password for your MySQL instance:"
        stty -echo
        read mysqlroot
        stty echo

        # drop user and db if exists
        mysql -u root -p\$mysqlroot -h localhost -s -e "GRANT USAGE ON *.* TO $user@localhost;"
        mysql -u root -p\$mysqlroot -h localhost -s -e "DROP USER $user@localhost;"
        mysql -u root -p\$mysqlroot -h localhost -s -e "DROP DATABASE IF EXISTS $user ;"

        # create db and user
        mysql -u root -p\$mysqlroot -h localhost -s -e "CREATE USER $user@localhost IDENTIFIED BY '$user';"
        mysql -u root -p\$mysqlroot -h localhost -s -e "GRANT USAGE ON *.* TO $user@localhost IDENTIFIED BY '$user' WITH MAX_QUERIES_PER_HOUR 0 MAX_CONNECTIONS_PER_HOUR 0 MAX_UPDATES_PER_HOUR 0 MAX_USER_CONNECTIONS 0 ;"
        mysql -u root -p\$mysqlroot -h localhost -s -e "CREATE DATABASE IF NOT EXISTS $user ;"
        mysql -u root -p\$mysqlroot -h localhost -s -e "GRANT ALL PRIVILEGES ON $user.* TO $user@localhost;"

        # echo inport db
        mysql -u root -p\$mysqlroot -h localhost $user < /var/www/${PACKAGE_NAME}-${VERSION}/sites/default/sql/site.sql

        # update settings.php
        chmod 666 /var/www/${PACKAGE_NAME}-${VERSION}/sites/default/settings.php
        chmod 777 /var/www/${PACKAGE_NAME}-${VERSION}/sites/default
        sed -i "s/      'database' => .*/      'database' => '$user',/g" /var/www/${PACKAGE_NAME}-${VERSION}/sites/default/settings.php
        sed -i "s/      'username' => .*/      'username' => '$user',/g" /var/www/${PACKAGE_NAME}-${VERSION}/sites/default/settings.php
        sed -i "s/      'password' => .*/      'password' => '$user',/g" /var/www/${PACKAGE_NAME}-${VERSION}/sites/default/settings.php
        chmod 444 /var/www/${PACKAGE_NAME}-${VERSION}/sites/default/settings.php
        chmod 555 /var/www/${PACKAGE_NAME}-${VERSION}/sites/default

        set -x
        SITENAME=${PACKAGE_NAME}.${TLD}
        sed "s/SITENAME/\$SITENAME/g" /var/tmp/${PACKAGE_NAME}-${VERSION}.conf > /etc/apache2/sites-available/${PACKAGE_NAME}-${VERSION}.conf
        sed "s/SITENAME/\$SITENAME/g" /var/tmp/${PACKAGE_NAME}-${VERSION}-ssl.conf > /etc/apache2/sites-available/${PACKAGE_NAME}-${VERSION}-ssl.conf
        set +x

        if [ ! -f /etc/ssl/certs/sitekey.pem ]; then
            ln -s /etc/ssl/certs/ssl-cert.pem /etc/ssl/certs/site.pem
            echo "WARNIG: Using snake oil certs.  Overwrite site.key & site.pem in"
            echo "/etc/ssl/certs/ with valid certs"
        fi
        if [ ! -f /etc/ssl/private/ssl-cert.key ]; then
            ln -s /etc/ssl/private/ssl-cert.key /etc/ssl/certs/site.key
        fi

        echo "Do you want to set up apache to server this site on https://${SITENAME} and"
        echo "redirect all traffic from hhtp to the hhtps site?  * This will disable (but not"
        echo "delete) the existing apache configuration and replace it with new.  It will"
        echo "also move the existing /var/www/html folder out of the way and replace it with"
        echo "a symlink to /var/www/html/${PACKAGE_NAME}-${VERSION}."
        echo "Set up Apache? (Y/n)"
        a=1
        until [ "\$a" == 'y' ] || [ "\$a" == 'Y' ] || [ "\$a" == 'n' ] || [ "\$a" == 'N' ]; do
            read a
        done
        if [ "\$a" == 'y' ] || [ "\$a" == 'Y' ]; then
            a2dissite default
            for x in /etc/apache2/sites-enabled; do
                a2dissite \$x
            done
            if [ -d /var/www ]; then
                mv /var/www /var/www.\`date +"%y-%m-%d_%H-%M"\`
            fi
            ln -sf /var/www/${PACKAGE_NAME}-${VERSION} /var/www
            a2ensite ${PACKAGE_NAME}-${VERSION}.conf
            a2ensite ${PACKAGE_NAME}-${VERSION}-ssl.conf
            a2enmod ssl
            a2enmod rewrite
        else
            echo "Copied config files into site-avaiable"
        fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument" >&2
        exit 1
    ;;
esac

#DEBHELPER#

exit 0
EOF

cd - && cd $PACKAGE_NAME/$PACKAGE_NAME-$VERSION
debuild -b -i -us -uc
set +x
